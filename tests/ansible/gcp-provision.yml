---
- hosts: localhost
  gather_facts: False
  vars:
    user: "centos"
    ssh_public_key: "{{ lookup('file', lookup('env', 'GCP_SSH_PUBLIC_KEY')) }}"
    credentials_file: "{{ lookup('env', 'GOOGLE_APPLICATION_CREDENTIALS') }}"
    build_id: "{{ lookup('env', 'buildID') }}"
  tasks:
  - name: Create New VM on GCE
    register: gce
    gce:
      instance_names: "kubevirt-labci-build{{build_id}}"
      zone: "us-central1-b"
      machine_type: "custom-2-8192"
      image_family: "kubevirt-labci-gce"
      state: "present"
      service_account_email: "push-button-ci@cnvlab-209908.iam.gserviceaccount.com"
      credentials_file: "{{ credentials_file }}"
      project_id: "cnvlab-209908"
      disk_size: 30
      metadata: '{"ssh-keys": "{{ user }}: {{ ssh_public_key }}"}'
      tags:
        - kubevirtci
  - name: "Write instance IP to /tmp/inventory"
    copy:
      content: '{{ gce.instance_data[0].public_ip }}'
      dest: /tmp/inventory
    delegate_to: localhost
  - name: "Wait for SSH to become available"
    wait_for:
      host: "{{ gce.instance_data[0].public_ip }}"
      port: 22
      timeout: 620
      state: started
  - name: "Give kubevirt Containers Time To Start"
    pause:
      minutes: 5

###
## TODO: Below is more ideal than an arbitrary wait but I couldn't get it to use the correct private key
#
#  - name: "Block Until All Pods In The kubevirt Namespace Show Ready"
#    register: kubevirt_pod_status
#    shell: kubectl get pods -n kubevirt -o json | jq -r '.items[].status.conditions[] | select(.type=="Ready") .status' | uniq
#    until: kubevirt_pod_status.stdout == "Ready"
#    delegate_to: "centos@{{ gce.instance_data[0].public_ip }}"
#    retries: 20
#    delay: 2
